pipeline {
    agent any

    environment {
        GITHUB_TOKEN = credentials('Github_Token')
        AZURE_PUBLISH_PROFILE = credentials('Azure_Publish_Profile')
    }

    stages {
        stage('Clone Repository') {
            steps {
                git url: 'https://github.com/AbraarMohiuddin/BookWeb.git', credentialsId: 'Github_Token'
            }
        }

        stage('Restore') {
            steps {
                bat 'dotnet restore'
            }
        }

        stage('Build') {
            steps {
                bat 'dotnet build --configuration Debug'
            }
        }

        stage('Publish') {
            steps {
                bat 'dotnet publish --configuration Release --output publish_output'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    bat 'docker build -t bookstore-test -f BookStore/Dockerfile .'
                }
            }
        }

        stage('Cleanup Docker Containers') {
            steps {
                script {
                    bat '''
                    docker rmi bookstore-test || exit /b 0
                    '''
                }
            }
        }
        
        stage('Create Zip Package') {
            steps {
                script {
                    bat 'powershell Compress-Archive -Path publish_output\\* -DestinationPath publish_output.zip'
                }
            }
        }

        stage('Deploy to Azure') {
            when {
                expression {
                    currentBuild.result == null || currentBuild.result == 'SUCCESS'
                }
            }
            steps {
                script {
                    withCredentials([file(credentialsId: 'Azure_Publish_Profile', variable: 'PUBLISH_PROFILE')]) {
                        bat """
                        az webapp deploy ^
                        --resource-group defaultresourcegroup-cau ^
                        --name BookStore20241010200200 ^
                        --src-path publish_output.zip ^
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
